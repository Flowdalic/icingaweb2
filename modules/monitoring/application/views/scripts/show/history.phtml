<?php

use Icinga\Module\Monitoring\Object\Service;

if ($object instanceof Service) {
    $title = $object->service_description;
    $params = array(
        'host'    => $object->host_name,
        'service' => $object->service_description
    );
} else {
    $title = $object->host_name;
    $params = array('host' => $object->host_name);
}

// TODO: Remove this once we have better helpers
$states = array(
    'service' => array(
        'ok',
        'warning',
        'critical',
        'unknown',
        99 => 'pending',
    ),
    'host' => array(
        'up',
        'down',
        'unreachable',
        99 => 'pending',
    )
);


?><div class="controls">
<?= $this->render('show/components/header.phtml') ?>
<h1><?= $this->translate("This object's event history") ?></h1>
<?=  $this->paginationControl($this->history, null, null, array('preserve' => $this->preserve)); ?>
</div>

<?php if($this->history->count() === 0): ?>
<?= $this->translate('No History Available For This Object' ?>
</div>
<?php return; endif ?>

<div class="content">
<table data-base-target="_next" class="action">
<tbody>

<?php foreach ($this->history as $event):
if (array_key_exists($event->state, $states[$event->object_type])) {
    $state_class = $states[$event->object_type][$event->state];
} else {
    $state_class = 'invalid';
}
?>
  <tr class="state <?= $state_class ?>">
    <td class="state"><?= $this->timeSince($event->timestamp) ?></td>
    <td>
<?php

$output = $this->ticket_pattern ? preg_replace(
    $this->ticket_pattern,
    $ticket_link,
    $this->escape($event->output)
) : $this->escape($event->output);


switch ($event->type) {
    case 'notify':
        $icon   = 'notification';
        $title  = 'Notification';
        break;
    case 'comment':
        $icon   = 'comment';
        $title  = 'Comment';
        break;
    case 'ack':
        $icon   = 'acknowledgement';
        $title  = 'Acknowledgement';
        break;
    case 'dt_comment':
        $icon   = 'in_downtime';
        $title  = 'In Downtime';
        break;
    case 'flapping':
        $icon   = 'flapping';
        $title  = 'Flapping';
        break;
    case 'hard_state':
        $icon   = 'submit';
        $title  = 'Hard State';
        break;
    case 'soft_state':
        $icon   = 'softstate';
        $title  = 'Soft State';
        break;
    case 'dt_start':
        $icon   = 'downtime_start';
        $title  = 'Downtime Start';
        break;
    case 'dt_end':
        $icon   = 'downtime_end';
        $title  = 'Downtime End';
        break;
}
echo $this->icon($icon . '.png', $title) . ' ';

if ($object instanceof Service): ?>
  <?= $this->escape($event->service_description) ?>
<?php else: ?>
  <?= $this->escape($event->host_name) ?>
<?php endif;

if ($event->attempt !== null) {
 printf('[ %d/%d ] ', $event->attempt, $event->max_attempts);
}
echo $output;

?>
    </td>
  </tr>
<? endforeach; ?>
</tbody>
</table>
</div>
